name: 'dotNet'
on:
  push:
    branches:
      - main
      - 'feature/*'
      - 'hotfix/*'
    paths:
      - 'src/**'
    tags:
      - '*'

  pull_request:
    branches:
      - main
      - 'feature/*'
      - 'hotfix/*'
    paths:
      - 'src/**'
      
  workflow_dispatch:
    inputs:
      release:
        description: 'Create Release'
        required: false
        default: 'false'
      feature:
        description: 'Deploy Feature'
        required: false
        default: 'false'

jobs:
    
  gitversion:
    name: 'GitVersion'
    #needs: gitleaks
    uses: szirmaibence98/templates/.github/workflows/gitversion.yml@main

  snyk:
    name: 'Snyk'
    needs: gitversion
    uses: szirmaibence98/templates/.github/workflows/snyk.yml@main
    secrets:
      SNYK_TOKEN: ${{ secrets.SNYK_TOKEN }}
      
  semgrep:
    name: 'Semgrep'
    needs: gitversion
    uses: szirmaibence98/templates/.github/workflows/semgrep.yml@main
    
  build:
    name: 'Build'
    needs:  
     - gitversion
     - snyk
     - semgrep
    uses: szirmaibence98/templates/.github/workflows/dotnet.yml@main
    with:
      dotnet-version: '8.0.x'
      working-directory: 'src'
      release: ${{ github.event.inputs.release == 'true' }}
      
  docker:
    needs: build
    uses: szirmaibence98/templates/.github/workflows/docker.yml@main
    if: ${{ github.ref == 'refs/heads/main' || (startsWith(github.ref, 'refs/heads/feature/') && github.event.inputs.feature == 'true') }}
    with:
      image-name: szirmaibence98/testimage
      docker-context: '.'
      release: ${{ github.event.inputs.release == 'true' }}
    secrets:
      DOCKER_USERNAME: ${{ secrets.DOCKER_USERNAME }}
      DOCKER_PASSWORD: ${{ secrets.DOCKER_PASSWORD }}

  trivy:
    name: 'Trivy'
    needs: docker
    uses: szirmaibence98/templates/.github/workflows/trivy.yml@main

  helm:
    needs: trivy
    needs: docker
    uses: szirmaibence98/templates/.github/workflows/helm.yml@main
    if: ${{ github.ref == 'refs/heads/main' || (startsWith(github.ref, 'refs/heads/feature/') && github.event.inputs.feature == 'true') }}
    with:
      release: ${{ github.event.inputs.release == 'true' }}
    secrets:
      ACR_USERNAME: ${{ secrets.ACR_USERNAME }}
      ACR_PASSWORD: ${{ secrets.ACR_PASSWORD }}
