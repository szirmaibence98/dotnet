name: 'Deploy'
on:
  push:
    branches:
      - main
      - 'feature/*'
      - 'hotfix/*'
    paths:
      - 'src/**'
    tags:
      - '*'

  pull_request:
    branches:
      - main
      - 'feature/*'
      - 'hotfix/*'
    paths:
      - 'src/**'
      
  workflow_dispatch:
    inputs:
      feature:
        description: 'Deploy Feature'
        required: false
        default: 'false'

jobs:
    
  gitversion:
    name: 'GitVersion'
    uses: szirmaibence98/templates/.github/workflows/gitversion.yml@main

#  snyk:
#    name: 'Snyk'
#    needs: gitversion
#    uses: szirmaibence98/templates/.github/workflows/snyk.yml@main
#    secrets:
#      SNYK_TOKEN: ${{ secrets.SNYK_TOKEN }}
#    with:
#      release: ${{ github.event.inputs.release == 'true' }}
      
#  semgrep:
#    name: 'Semgrep'
#    needs: gitversion
#    uses: szirmaibence98/templates/.github/workflows/semgrep.yml@main
#    with:
#      release: ${{ github.event.inputs.release == 'true' }}
    

  build:
    name: 'Build'
    needs:  
     - gitversion
    uses: szirmaibence98/templates/.github/workflows/dotnet.yml@main
    with:
      dotnet-version: '8.0.x'
      project-paths: >
        [
          "src/app2/dotnet.csproj"
        ]
#        [
#          "src/app1/dotnet.csproj",
#          "src/app2/dotnet.csproj"
#        ]
      release: ${{ github.event.inputs.release == 'true' }}




  docker:
    needs: 
     - build
    uses: szirmaibence98/templates/.github/workflows/docker.yml@main
    with:
      image-names: '[{"image-name": "szirmaibence98/testimage1", "docker-context": ".", "docker-file": "./dockerfiles/Dockerfile.testimage1"}, {"image-name": "szirmaibence98/testimage2", "docker-context": ".", "docker-file": "./dockerfiles/Dockerfile.testimage2"}]'
      release: ${{ github.event.inputs.release == 'true' }}
    secrets:
      DOCKER_USERNAME: ${{ secrets.DOCKER_USERNAME }}
      DOCKER_PASSWORD: ${{ secrets.DOCKER_PASSWORD }}

  
#  docker:
#    needs: 
#     - build
##     - snyk
##     - semgrep
#    uses: szirmaibence98/templates/.github/workflows/docker.yml@main
#    with:
#      image-name: szirmaibence98/testimage
#      docker-context: '.'
#      release: ${{ github.event.inputs.release == 'true' }}
#    secrets:
#      DOCKER_USERNAME: ${{ secrets.DOCKER_USERNAME }}
#      DOCKER_PASSWORD: ${{ secrets.DOCKER_PASSWORD }}

#  trivy:
#    name: 'Trivy'
#    needs: docker
#    uses: szirmaibence98/templates/.github/workflows/trivy.yml@main
#    if: ${{ github.ref == 'refs/heads/main' || (startsWith(github.ref, 'refs/heads/feature/') && github.event.inputs.feature == 'true') }}



#  opa:
#    name: 'Open Policy Agent'
#    needs: docker
#    if: ${{ github.ref == 'refs/heads/main' || (startsWith(github.ref, 'refs/heads/feature/') && github.event.inputs.feature == 'true') }}
#    runs-on: ubuntu-latest
#    steps:
#      - name: Checkout code
#        uses: actions/checkout@v4.1.1
      
#      - name: Install OPA
#        run: |
#          curl -L -o opa https://openpolicyagent.org/downloads/latest/opa_linux_amd64_static
#          chmod +x opa
#          sudo mv opa /usr/local/bin/
#      - name: Run OPA Policy Check
#        run: opa eval --format pretty --data policy.rego --input input.json "data.dockerfile.allow"




  helm:
    needs: docker
    uses: szirmaibence98/templates/.github/workflows/helm.yml@main
    with:
      release: ${{ github.event.inputs.release == 'true' }}
      repository: ${{ vars.REPOSITORY_NAME  }}
    secrets:
      ACR_USERNAME: ${{ secrets.ACR_USERNAME }}
      ACR_PASSWORD: ${{ secrets.ACR_PASSWORD }}


#  dev:
#    needs: helm
#    uses: szirmaibence98/templates/.github/workflows/deploy.yml@main
#    with:
#      environment: dev
#      deploy_condition: ${{ github.ref == 'refs/heads/main' || startsWith(github.ref, 'refs/tags/') || (startsWith(github.ref, 'refs/heads/feature/') && github.event.inputs.feature == 'true') }}

#  staging:
#    needs: helm
#    uses: szirmaibence98/templates/.github/workflows/deploy.yml@main
#    with:
#      environment: staging
#      deploy_condition: ${{ github.ref == 'refs/heads/main' || startsWith(github.ref, 'refs/tags/') }}
      
#  prod:
#    needs: helm
#    uses: szirmaibence98/templates/.github/workflows/deploy.yml@main
#    with:
#      environment: prod
#      deploy_condition: ${{ github.ref == 'refs/heads/main' || startsWith(github.ref, 'refs/tags/') || startsWith(github.ref, 'refs/heads/hotfix/') }}
      




  
