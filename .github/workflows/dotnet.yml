
name: 'dotNet'
on:
  push:
    branches:
      - main
      - develop
      - feature/*
      - hotfix/*
    paths:
      - 'src/**'
  pull_request:
    branches:
      - main
      - develop
      - feature/*
      - hotfix/*
    paths:
      - 'src/**'

  workflow_dispatch:
    inputs:
      create-release:
        description: 'Create release'
        required: true
        default: false

jobs:
  gitversion:
    name: 'Determine Version'
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Repository
        uses: actions/checkout@v4.1.1
        with:
          fetch-depth: 0
          
      - name: Install GitVersion
        uses: gittools/actions/gitversion/setup@v0
        with:
          versionSpec: '5.x'     
          preferLatestVersion: true

      - name: Determine Version
        id: determine_version
        uses: gittools/actions/gitversion/execute@v0
        with:
          useConfigFile: true
  
      - name: Set SemVerV2 Environment Variable
        run: echo "SEMVERV2=${{ steps.determine_version.outputs.SemVerV2 }}" >> $GITHUB_ENV
  

  release:
    needs: gitversion
    runs-on: ubuntu-latest
    steps:
      - name: Check if release should be created
        run: |
          if ${{ github.event.inputs.create-release }}; then
            echo "Creating release"
          else
            echo "Not creating release"
          fi

      - name: Example Step
        run: echo "SemVerV2 value is $SEMVERV2"

    
  build:
    name: 'Build'
    needs: gitversion
    uses: szirmaibence98/templates/.github/workflows/dotnet.yml@main
    with:
      dotnet-version: '8.0.x'
      working-directory: 'src' # Optional: specify if your solution file is not in the root directory



  docker:
    needs: build
    uses: szirmaibence98/templates/.github/workflows/docker.yml@main
    with:
      image-name: 'szirmaibence98/testimage:latest'
      docker-context: '.'
      # Optionally specify a different Dockerfile path
      # dockerfile-path: 'path/to/your/Dockerfile'
    secrets:
      DOCKER_USERNAME: ${{ secrets.DOCKER_USERNAME }}
      DOCKER_PASSWORD: ${{ secrets.DOCKER_PASSWORD }}
