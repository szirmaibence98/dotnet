name: 'dotNet'
on:
  push:
    branches:
      - main
      - develop
      - 'feature/*'
      - 'hotfix/*'
    paths:
      - 'src/**'
  pull_request:
    branches:
      - main
      - develop
      - 'feature/*'
      - 'hotfix/*'
    paths:
      - 'src/**'

  workflow_dispatch:
    inputs:
      create-release:
        description: 'Create release'
        required: true
        default: false

jobs:

  semgrep:
    permissions:
      contents: read # for actions/checkout to fetch code
      security-events: write # for github/codeql-action/upload-sarif to upload SARIF results
      actions: read # only required for a private repository by github/codeql-action/upload-sarif to get the Action run status
    name: Scan
    runs-on: ubuntu-latest
    steps:
      # Checkout project source
      - uses: actions/checkout@v4.1.1

      # Scan code using project's configuration on https://semgrep.dev/manage
      - uses: returntocorp/semgrep-action@fcd5ab7459e8d91cb1777481980d1b18b4fc6735
        with:
          publishToken: ${{ secrets.SEMGREP_APP_TOKEN }}
          publishDeployment: ${{ secrets.SEMGREP_DEPLOYMENT_ID }}
          generateSarif: "1"

      # Upload SARIF file generated in previous step
      - name: Upload SARIF file
        uses: github/codeql-action/upload-sarif@v3
        with:
          sarif_file: semgrep.sarif
        if: always()

            


  
  gitversion:
    name: 'Determine Version'
    runs-on: ubuntu-latest
    outputs:
      version: ${{ steps.determine_version.outputs.MajorMinorPatch }}      
    steps:
      - name: Checkout Repository
        uses: actions/checkout@v4.1.1
        with:
          fetch-depth: 0




          
      - name: Install GitVersion
        uses: gittools/actions/gitversion/setup@v0
        with:
          versionSpec: '5.x'     
          preferLatestVersion: true

      - name: Determine Version
        id: determine_version
        uses: gittools/actions/gitversion/execute@v0
        with:
          useConfigFile: true
 
      - name: Save version to file
        run: echo "${{ steps.determine_version.outputs.MajorMinorPatch }}" > /tmp/version.txt

      - name: Upload version artifact
        uses: actions/upload-artifact@v2
        with:
          name: version
          path: /tmp/version.txt      


  write_to_file:
    needs: gitversion
    runs-on: ubuntu-latest
    steps:
      - name: Download version file
        uses: actions/download-artifact@v2
        with:
          name: version
          path: /tmp

      - name: Echo version
        run: cat /tmp/version.txt
        
  release:
    needs: gitversion
    runs-on: ubuntu-latest
    steps:
      - name: Check if release should be created
        run: |
          if ${{ github.event.inputs.create-release }}; then
            echo "Creating release"
          else
            echo "Not creating release"
          fi

      - name: Example Step
        run: echo "SemVerV2 value is $GITHUB_ENV "
    
  build:
    name: 'Build'
    needs: gitversion
    uses: szirmaibence98/templates/.github/workflows/dotnet.yml@main
    with:
      dotnet-version: '8.0.x'
      working-directory: 'src' # Optional: specify if your solution file is not in the root directory

  docker:
    needs: build
    uses: szirmaibence98/templates/.github/workflows/docker.yml@main
    with:
      image-name: szirmaibence98/testimage
      docker-context: '.'
    secrets:
      DOCKER_USERNAME: ${{ secrets.DOCKER_USERNAME }}
      DOCKER_PASSWORD: ${{ secrets.DOCKER_PASSWORD }}
